{"ast":null,"code":"import { ViewContainerRef } from '@angular/core';\nimport { ThemeTemplate } from 'app/components/models/theme';\nimport * as i0 from \"@angular/core\";\nexport let LoadDirective = /*#__PURE__*/(() => {\n  class LoadDirective {\n    constructor(viewContainerRef) {\n      this.viewContainerRef = viewContainerRef;\n    }\n    ngOnChanges(changes) {\n      //Called before any other lifecycle hook. Use it to inject dependencies, but avoid any serious work here.\n      //Add '${implements OnChanges}' to the class.\n    }\n  }\n  LoadDirective.ɵfac = function LoadDirective_Factory(t) {\n    return new (t || LoadDirective)(i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n  };\n  LoadDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: LoadDirective,\n    selectors: [[\"\", \"appLoad\", \"\"]],\n    inputs: {\n      theme: \"theme\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature]\n  });\n  return LoadDirective;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}